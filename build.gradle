//Easy semantic version based off describe + tags
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--long'
        standardOutput = stdout
    }
    def tagVer = stdout.toString().trim()
    def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

    if (tagVer.contains('dev')) {
        semVer += "-SNAPSHOT"
    }

    return semVer
}

description = "Kryptnostic Java client"
group = "com.kryptnostic"
version = getVersionName()

apply plugin: "maven-publish"
apply plugin: "distribution"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: "idea"
apply from: "publish.gradle"
apply plugin: "jacoco"

sourceCompatibility=JavaVersion.VERSION_1_7

repositories {
  mavenCentral()  
  mavenLocal()
  maven {
    url "https://build.shibboleth.net/nexus/content/groups/public/"
  }
  maven {
    url "http://maven.springframework.org/snapshot"
  }
  maven {
    url  "http://maven.springframework.org/milestone"
  }
  maven {
   url "http://repo.maven.apache.org/maven2"
  }
  maven {
   url "https://oss.sonatype.org/content/repositories/snapshots"
  }

}

ext.jackson_version='2.4.4'
ext.fhe_core_version='0.1.2-SNAPSHOT'
ext.retrofit_version='1.9.0'

dependencies { 

	if( project.hasProperty('developmentMode') && project.developmentMode ) {
        logger.info("$project.name is using project dependencies.")
        //testCompile( project(":kryptnostic-metrics") )
    } else {
        logger.quiet("$project.name is using jar dependencies.")
        
    }
    
    compile "com.squareup.retrofit:retrofit:${retrofit_version}"
    compile "com.squareup.okhttp:okhttp-urlconnection:2.3.0"
    compile "com.squareup.okhttp:okhttp:2.3.0"
	// FIXME: not working! use the following to replace com.kryptnostic.kodex.v1.utils.JacksonConverter plz!
	// compile "com.squareup.retrofit:retrofit-converters:1.6.0" // not available for 1.6.1 //#${retrofit_version}
  

    /*
     * TESTING
     */
    testCompile 'junit:junit:4.11'
}

task sourcesJar(type : Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task testJar(type: Jar, dependsOn: testClasses) {
    classifier = 'tests'
    from sourceSets.test.output
}

configurations {
    tests
      published.extendsFrom tests, archives 
}

artifacts {
	archives sourcesJar, javadocJar
	tests testJar
}

install { 
	configuration = configurations.published 
} 

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility=JavaVersion.VERSION_1_7
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
